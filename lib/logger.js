"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint no-console: ["error", {"allow": ["log", "warn", "error"]}] */

var Logger = function () {
  function Logger(argv) {
    _classCallCheck(this, Logger);

    this.argv = argv;
    this.log = this.log.bind(this);
  }

  _createClass(Logger, [{
    key: "log",
    value: function log(level, msg) {
      switch (level) {
        case 1:
          console.error(msg);
          break;
        case 2:
          console.warn(msg);
          break;
        case 3:
          console.log(msg);
          break;
        default:
          if (this.argv.verbose) console.log(msg);
      }
    }
  }]);

  return Logger;
}();

exports.default = Logger;